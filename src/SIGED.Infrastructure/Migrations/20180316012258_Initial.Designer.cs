// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SIGED.Infrastructure.Context;
using System;

namespace SIGED.Infrastructure.Migrations
{
    [DbContext(typeof(SIGEDContext))]
    [Migration("20180316012258_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SIGED.ApplicationCore.Entity.Curso", b =>
                {
                    b.Property<int>("CursoId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CursoNome");

                    b.HasKey("CursoId");

                    b.ToTable("Curso");
                });

            modelBuilder.Entity("SIGED.ApplicationCore.Entity.Endereco", b =>
                {
                    b.Property<int>("EnderecoId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CEP");

                    b.Property<string>("Endereco1");

                    b.Property<string>("Endereco2");

                    b.Property<string>("Estado");

                    b.Property<int?>("EstudanteId");

                    b.HasKey("EnderecoId");

                    b.HasIndex("EstudanteId")
                        .IsUnique()
                        .HasFilter("[EstudanteId] IS NOT NULL");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("SIGED.ApplicationCore.Entity.Estudante", b =>
                {
                    b.Property<int>("EstudanteId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Altura");

                    b.Property<DateTime>("DataNacimento");

                    b.Property<string>("EstudanteNome");

                    b.Property<string>("Foto");

                    b.Property<int>("NivelEnsinoId");

                    b.Property<decimal>("Peso");

                    b.HasKey("EstudanteId");

                    b.HasIndex("NivelEnsinoId");

                    b.ToTable("Estudante");
                });

            modelBuilder.Entity("SIGED.ApplicationCore.Entity.Matricula", b =>
                {
                    b.Property<int>("MatriculaId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CursoId");

                    b.Property<int>("EstudanteId");

                    b.HasKey("MatriculaId");

                    b.HasIndex("CursoId");

                    b.HasIndex("EstudanteId");

                    b.ToTable("Matricula");
                });

            modelBuilder.Entity("SIGED.ApplicationCore.Entity.NivelEnsino", b =>
                {
                    b.Property<int>("NivelEnsinoId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.HasKey("NivelEnsinoId");

                    b.ToTable("NivelEnsino");
                });

            modelBuilder.Entity("SIGED.ApplicationCore.Entity.Professor", b =>
                {
                    b.Property<int>("ProfessorId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("NivelEnsinoId");

                    b.Property<string>("ProfessorNome");

                    b.Property<string>("TipoProfessor");

                    b.HasKey("ProfessorId");

                    b.HasIndex("NivelEnsinoId");

                    b.ToTable("Professor");
                });

            modelBuilder.Entity("SIGED.ApplicationCore.Entity.Endereco", b =>
                {
                    b.HasOne("SIGED.ApplicationCore.Entity.Estudante", "Estudante")
                        .WithOne("Endereco")
                        .HasForeignKey("SIGED.ApplicationCore.Entity.Endereco", "EstudanteId");
                });

            modelBuilder.Entity("SIGED.ApplicationCore.Entity.Estudante", b =>
                {
                    b.HasOne("SIGED.ApplicationCore.Entity.NivelEnsino", "NivelEnsino")
                        .WithMany("Estudantes")
                        .HasForeignKey("NivelEnsinoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIGED.ApplicationCore.Entity.Matricula", b =>
                {
                    b.HasOne("SIGED.ApplicationCore.Entity.Curso", "Curso")
                        .WithMany("Matriculas")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIGED.ApplicationCore.Entity.Estudante", "Estudante")
                        .WithMany("Matriculas")
                        .HasForeignKey("EstudanteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIGED.ApplicationCore.Entity.Professor", b =>
                {
                    b.HasOne("SIGED.ApplicationCore.Entity.NivelEnsino", "NivelEnsino")
                        .WithMany("Professores")
                        .HasForeignKey("NivelEnsinoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
